---
- debug: var=apache_deny_addresses

- name: Apache | Put up inclusions
  template:
    src: "bbinc/{{ item.name }}.j2"
    dest: "{{ apache_conf_available }}/{{ item.name }}"
    mode: 0644
    owner: root
    group: root
  with_items:
    - {
        name: 'blocked-addresses.conf',
        status: "{{ apache_deny_addresses }}"
      }
    - {
        name: 'blocked-agents.conf',
        status: "{{ apache_deny_agents }}"
      }
  when: item.status
  become: true
  tags: [apache]

- name: Apache | Update default host
  template:
    src: apache_default_vhost.conf.j2
    dest: "{{ apache_vhost_available }}/{{ apache_default_vhost }}"
    backup: true
  #  validate: 'apachectl -t -f %s'
  tags: [apache]
  register: vhost_updated
  become: true


- name: Set fact for config to test
  set_fact:
    apache_conf_to_test:  "{{ apache_vhost_available }}/{{ apache_default_vhost }}"

- name: Apache | test Updated hosts
  template:
     src: config_test.conf.j2
     dest: "/tmp/config_test.conf"
     mode: 0644
     owner: root
     group: root
     validate: 'apachectl -t -f %s'
  register: apache_result
  when: vhost_updated.changed
  ignore_errors: yes
  become: true
  tags: [apache]

- name: Clear out test file
  file:
    path: "/tmp/config_test.conf"
    state: absent
  become: true
  when:  apache_result is success
  notify:
    - restart apache
  tags: [apache]

- name: Apache | enable host success
  fail: msg="Apache configuration is invalid. Please check before re-running the playbook."
  when: apache_result is failed
  tags: [apache]

- name: Apache | Enable default host
  file:
    src: "{{ apache_vhost_available }}/{{ apache_default_vhost }}"
    dest: "{{ apache_vhost_enabled }}/000-default.conf"
    state: link
  when:  apache_result is success
  become: true
  notify:
    - restart apache
  tags: [apache]

- name: Apache | Put up Holding page
  copy:
    src: "{{ item }}"
    dest: "{{ apache_default_site }}"
    owner: "{{ apache_admin_user }}"
    group: "{{ apache_admin_group }}"
    mode: 0644
  with_fileglob:
    - "{{ apache_default_site_files}}/*"
  when: not apache_rsync_default_site
  tags: [apache]

- name: Apache | Put up holding site
  synchronize:
    src: "{{ apache_default_site_files}}/"
    dest: "{{ apache_default_site }}"
    recursive: yes
    rsync_opts:
      - "--exclude=.DS_Store"
  when: apache_rsync_default_site
  tags: [apache]

- name: Apache | Set permissions on rsync'd apache_default_site_files
  shell: find {{ apache_default_site }} -type f -exec chmod 664 {} + -o -type d -exec chmod 775 {} +
  changed_when: False
  when: apache_rsync_default_site
  become: true
  tags: [apache]

- name: Apache | Correct ownership (files)
  shell: chown -hR {{ apache_admin_user }}:{{ apache_admin_group }} {{ apache_default_site }}
  changed_when: False
  when: apache_rsync_default_site
  become: true
  tags: [apache]

#- name: Apache | Setup default site
#  unarchive: >
#   src=default-site.tar
#   dest={{ apache_home_dir }}/
#   creates={{ apache_home_dir }}/default/index.html
#  tags:
#    - apache
#    - defaultsite